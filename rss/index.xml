<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Ramblings of a Dude]]></title><description><![CDATA[Ramblings of a programmer, gamer, modder, maker and computer scientist]]></description><link>https://TRex22.github.io/blog</link><image><url>/images/thearrangement.png</url><title>Ramblings of a Dude</title><link>https://TRex22.github.io/blog</link></image><generator>RSS for Node</generator><lastBuildDate>Sat, 22 Sep 2018 19:49:47 GMT</lastBuildDate><atom:link href="https://TRex22.github.io/blog/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Hello Again ~~ :)]]></title><description><![CDATA[<div class="paragraph">
<p>As you can see I am using a new blog renderer. It&#8217;s called <a href="http://hubpress.io/">Hubpress</a> as in Wordpress :). I chose to move away from Skinny Bones because I have been crazy busy and I was not happy with the default configuration. This new tech is a lot more slick to use and even comes with an Admin panel which is powered by the GitHub api.</p>
</div>
<div class="imageblock">
<div class="content">
<img src="https://TRex22.github.io/blog/images/aroundtheworld.png" alt="aroundtheworld">
</div>
</div>
<div class="paragraph">
<p>I have lots of posts I have been holding off on writing up because of the work involved with the previous iteration of my blog site. Here there is less dev and more learning how this all fits together. I&#8217;ve just seen that there does not seem to be any spell check which is interesting &#8230;&#8203;</p>
</div>
<div class="paragraph">
<p>The interactive web editor is pretty cool and allows the user to save drafts and preview current content which is handy.</p>
</div>
<div class="paragraph">
<p>I am doing my first postgraduate degree at the moment so I am coding, writing and studying far more than ever before. However I want to get my online profile out there for future opportunities.</p>
</div>
<div class="paragraph">
<p>I have a lot of old projects that I would like to write up but put in their own archive area of the blog. I would also like to have a filter function for posts &#8230;&#8203; I see there is one on the admin side. If I can&#8217;t find built in options I&#8217;ll add them as I go.</p>
</div>
<div class="paragraph">
<p>Finally getting this thing off the ground, only three years late! ;)</p>
</div>
<div class="paragraph">
<p>&#8201;&#8212;&#8201;Jason</p>
</div>]]></description><link>https://TRex22.github.io/blog/2017/05/27/Welcome-Back.html</link><guid isPermaLink="true">https://TRex22.github.io/blog/2017/05/27/Welcome-Back.html</guid><category><![CDATA[HubPress]]></category><category><![CDATA[Blog]]></category><category><![CDATA[Open_Source]]></category><category><![CDATA[Opinion]]></category><dc:creator><![CDATA[Jason Chalom]]></dc:creator><pubDate>Sat, 27 May 2017 00:00:00 GMT</pubDate></item><item><title><![CDATA[Proof of an Optimal Broadcast Algorithm]]></title><description><![CDATA[<div class="imageblock">
<div class="content">
<img src="https://TRex22.github.io/blog/images/ring.png" alt="ring">
</div>
</div>
<div class="paragraph">
<p>Proof of optimality (by induction):</p>
</div>
<div class="paragraph">
<p>RTP: For n-number of nodes the algorithm has O(n) maximum communication steps.<br></p>
</div>
<div class="paragraph">
<p>For n=1: There are 0 communication steps.<br>
For n=2: There is 1 communication step.<br>
For n=k: There are k communication steps.<br>
For n=k+1: There is 1 communication step.</p>
</div>
<div class="paragraph">
<p>âˆ´ The number of communication steps can never exceed the number of nodes in this configuration, i.e. This is the optimal broadcast algorithm for this network design. The smallest number of communication steps is 1 (between more than one node) and the largest possible amount of steps is k.</p>
</div>
<div class="paragraph">
<p>This is a simple example of an algorithmic proof of optimality. For parallel systems and more complex network structure the proofs can become more involved.</p>
</div>]]></description><link>https://TRex22.github.io/blog/2017/05/27/Proof-of-an-Optimal-Broadcast-Algorithm.html</link><guid isPermaLink="true">https://TRex22.github.io/blog/2017/05/27/Proof-of-an-Optimal-Broadcast-Algorithm.html</guid><category><![CDATA[Computer Science]]></category><category><![CDATA[Algorithms]]></category><dc:creator><![CDATA[Jason Chalom]]></dc:creator><pubDate>Sat, 27 May 2017 00:00:00 GMT</pubDate></item></channel></rss>